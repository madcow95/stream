package com.moviestream.movie.board;

import java.io.File;
import java.nio.file.Files;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import org.apache.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.moviestream.movie.board.domain.BoardAttachDTO;

import lombok.extern.log4j.Log4j;

@Controller
@Log4j
public class UploadController {
	
	private String uploadPath = "C:\\Users\\choi\\Desktop\\realmovie\\movie\\src\\main\\webapp\\resources\\fileUpload";
	
	@GetMapping("/uploadForm")
	public void uploadForm() {
		log.info("upload Form");
	}
	
	@PostMapping("/uploadFormAction")
	public void uploadFormPost(MultipartFile[] uploadFile, Model model) throws Exception {
		for (MultipartFile multipartFile : uploadFile) {
			log.info("---------------------------------------------------");
			log.info("Upload File Name : " + multipartFile.getName());
			log.info("Upload File Size : " + multipartFile.getSize());
			log.info("Upload File ContentType : " + multipartFile.getContentType());
		}
	}
	
	private String getFolder() {
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		
//		Date date = new Date(0);
		java.util.Date date = new java.util.Date();
		String str = sdf.format(date);
		log.info("str =============== "+str);
		return str.replace("-", File.separator);
	}
	
	private boolean checkImageType(File file) {
		try {
			String contentType = Files.probeContentType(file.toPath());
			return contentType.startsWith("image");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return false;
	}
	
	@PostMapping(value = "/uploadAjaxAction", 
			 produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
@ResponseBody
public ResponseEntity<List<BoardAttachDTO>> uploadAjaxPost(MultipartFile[] uploadFile) {
	log.info("update ajax post ...........................");
	List<BoardAttachDTO> attachList = new ArrayList<>();
	
	String uploadFolderPath = getFolder();
	
	File uploadFolder = new File(uploadPath, getFolder());
	log.info("uploadFolder path >>>> " + uploadFolder);
	
	if(uploadFolder.exists() == false) {
		uploadFolder.mkdirs();
	}
	for(MultipartFile multipartFile : uploadFile) {
		log.info("---------------------------------------------------");
		log.info("Upload File Name : " + multipartFile.getName());
		log.info("Upload File Size : " + multipartFile.getSize());
		log.info("Upload File ContentType : " + multipartFile.getContentType());
		
		BoardAttachDTO attachFileDTO = new BoardAttachDTO();
		String uploadFileName = multipartFile.getOriginalFilename();
		
		uploadFileName = uploadFileName.substring(uploadFileName.lastIndexOf("\\") + 1);
		log.info("only file name : " + uploadFileName);
		
		attachFileDTO.setFileName(uploadFileName);
		
		UUID uuid = UUID.randomUUID();
		uploadFileName = uuid.toString() + "_" + uploadFileName;
		
		try {
			File saveFile = new File(uploadFolder, uploadFileName);
			multipartFile.transferTo(saveFile);
			
			attachFileDTO.setUuid(uuid.toString());
			attachFileDTO.setUploadPath(uploadFolderPath);
			
			if(checkImageType(saveFile)) {
				attachFileDTO.setImage(true);
				
				File thumbnail = new File(uploadFolder, "s_" + uploadFileName);
				Thumbnails.of(saveFile).size(100, 100).toFile(thumbnail);
			}
			
			attachList.add(attachFileDTO);
		} catch (Exception e) {
			log.error(e.getMessage());
		}
	}
	return new ResponseEntity<>(attachList, HttpStatus.OK);
}

}
